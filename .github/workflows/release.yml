name: Release 🚀

on:
  push:
    branches:
      - main
  workflow_dispatch:

permissions:
  pull-requests: write
  contents: write
  issues: write
  id-token: write

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  release:
    if: ${{ github.event_name == 'push' && github.ref == 'refs/heads/main' && !contains(github.event.head_commit.message, '[skip ci]')}}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout 🧳
        uses: actions/checkout@v4

      - name: Install Node.js 🔥
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Install pnpm 👀
        uses: pnpm/action-setup@v3
        id: pnpm-install
        with:
          version: 8
          run_install: false

      - name: Get pnpm store directory 🏪
        id: pnpm-cache
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path)" >> $GITHUB_OUTPUT

      - name: Setup pnpm cache 💰
        uses: actions/cache@v4
        with:
          path: ${{ steps.pnpm-cache.outputs.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Install dependencies ⏬
        run: pnpm install --no-frozen-lockfile

      - name: Test 🔫
        run: pnpm run test:coverage

      - name: Build ⏰
        run: pnpm build
        env:
          NODE_ENV: production

      - name: Release 🚀
        id: changesets
        uses: changesets/action@v1
        with:
          version: pnpm changeset version
          publish: pnpm changeset publish
          commit: "ci: :package: release"
          title: "ci: :package: release"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}